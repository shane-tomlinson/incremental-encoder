{"version":3,"file":"decoder.js","sourceRoot":"/","sources":["lib/decoder.ts"],"names":[],"mappings":";AAAA;;8DAE8D;;AAE9D,2CAAoC;AAEpC,MAAqB,YAAY;IAC/B,MAAM,CAAC,OAAiB;QACtB,OAAO,OAAO,CAAC,MAAM,CACnB,CAAC,MAAgB,EAAE,OAAe,EAAE,KAAa,EAAE,EAAE;YACnD,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,iBAAK,CAAC,CAAC;YAChD,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,iBAAiB,OAAO,EAAE,CAAC,CAAC;aAC7C;YACD,IAAI,KAAK,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,iBAAiB,OAAO,EAAE,CAAC,CAAC;aAC7C;YACD,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,SAAS,KAAK,CAAC,EAAE;gBACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACrB;iBAAM;gBACL,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC;aACrD;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EACD,EAAE,CACH,CAAC;IACJ,CAAC;CACF;AAxBD,+BAwBC","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { RADIX } from './constants';\n\nexport default class FrontDecoder {\n  decode(encoded: string[]): string[] {\n    return encoded.reduce(\n      (result: string[], current: string, index: number) => {\n        const numSharedStr = current.charAt(0);\n        const numShared = parseInt(numSharedStr, RADIX);\n        if (isNaN(numShared)) {\n          throw new Error(`Invalid line: ${current}`);\n        }\n        if (index === 0 && numShared !== 0) {\n          throw new Error(`Invalid line: ${current}`);\n        }\n        const suffix = current.slice(1);\n        if (numShared === 0) {\n          result.push(suffix);\n        } else {\n          const prev = result[index - 1];\n          result.push(`${prev.slice(0, numShared)}${suffix}`);\n        }\n        return result;\n      },\n      []\n    );\n  }\n}\n"]}