{"version":3,"file":"encoder.js","sourceRoot":"/","sources":["test/encoder.ts"],"names":[],"mappings":";AAAA;;8DAE8D;;AAE9D,+BAA8B;AAC9B,4CAAqC;AAErC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;QAC9B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC5B,qBAAqB;YACrB,cAAc;YACd,gCAAgC;YAChC,uBAAuB;YACvB,QAAQ;YACR,4BAA4B;YAC5B,EAAE;YACF,uCAAuC;YACvC,IAAI;YACJ,OAAO;YACP,SAAS;SACV,CAAC,CAAC;QACH,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,eAAe,EAAC,wBAAwB,EAAC,kBAAkB,CAAC,CAAC,CAAC;IAChH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { assert } from \"chai\";\nimport Encoder from \"../lib/encoder\";\n\ndescribe(\"encoder\", () => {\n  it(\"encodes the dictionary\", () => {\n    const encoder = new Encoder();\n    const result = encoder.encode([\n      // encoder sorts list\n      \"out_of_order\",\n      \"this_is_one_really_long_string\",\n      \"this_is_one_ready_cab\",\n      \"entry2\",\n      // empty entries are ignored\n      \"\",\n      // entries with just spaces are ignored\n      \"  \",\n      \"entry\",\n      \"entry21\"\n    ]);\n    assert.deepEqual(result, [\"0entry\", \"52\", \"61\", \"0out_of_order\",\"0this_is_one_ready_cab\",\"flly_long_string\"]);\n  });\n});\n"]}